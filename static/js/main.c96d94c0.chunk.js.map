{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverseField","setReverseField","goods","sort","firstGood","nextGood","length","reverse","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SAEbC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAOT,GAkBlB,OAZIK,IAAcJ,GAChBQ,EAAMC,OAGJL,IAAcH,GAChBO,EAAMC,MAAK,SAACC,EAAWC,GAAZ,OAAyBD,EAAUE,OAASD,EAASC,UAG9DN,GACFE,EAAMK,UAIN,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBACZ,CAAE,WAAYZ,IAAcJ,IAC9BiB,QAAS,kBAAMZ,EAAaL,IAJ9B,iCASA,wBACEe,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,WAAYZ,IAAcH,IAC9BgB,QAAS,kBAAMZ,EAAaJ,IAJ9B,4BASA,wBACEc,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,YAAaV,IACjBW,QAzCe,WACrBV,GAAiBD,IAoCb,sBASEF,GAAaE,IAEX,wBACES,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPZ,EAAa,IACbE,GAAgB,IALpB,sBAcN,6BACGC,EAAMU,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCvFlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c96d94c0.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseField, setReverseField] = useState(false);\n  const goods = [...goodsFromServer];\n\n  const onClickReverse = () => {\n    setReverseField(!reverseField);\n  };\n\n  if (sortField === SORT_FIELD_ALPHABET) {\n    goods.sort();\n  }\n\n  if (sortField === SORT_FIELD_LENGTH) {\n    goods.sort((firstGood, nextGood) => firstGood.length - nextGood.length);\n  }\n\n  if (reverseField) {\n    goods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABET })}\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH })}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !reverseField })}\n          onClick={onClickReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverseField)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortField('');\n                setReverseField(false);\n              }}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}